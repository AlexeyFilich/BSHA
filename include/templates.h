#pragma once
#define SCRIPTS_H
#ifdef SCRIPTS_H

#include <string>

namespace bsha {

std::string template_json =
"{\n"
"    \"project\": \"program\",\n"
"    \"compiler\": {\n"
"        \"path\": \"g++\",\n"
"        \"flags\": \"-std=c++17 -static-libstdc++ -static-libgcc\",\n"
"        \"include_path\": [\n"
"            \"include/\",\n"
"            \"third-party/toolbox/\"\n"
"        ],\n"
"        \"library_path\": [\n"
"            \"lib/\"\n"
"        ]\n"
"    },\n"
"    \"main\": {\n"
"        \"path\": \"src/main.cpp\",\n"
"        \"output_name\": \"main.out\",\n"
"        \"flags\": \"\",\n"
"        \"binaries\": \"\"\n"
"    },\n"
"    \"sources\": [\n"
"        {\n"
"            \"path\": \"src/a.cpp\",\n"
"            \"flags\": \"\",\n"
"            \"binaries\": \"\"\n"
"        }\n"
"    ],\n"
"    \"extra_commands\": [\n"
"        \"echo Hello, world!\"\n"
"    ]\n"
"}\n";

std::string header =
"#!/bin/bash\n"
"# Generated using BSHA - Build .sh assembler for C++\n"
"# GitHub: https://github.com/AlexeyFilich/bsha\n"
"\n"
"if [ \"$1\" == \"--full\" ] || [ \"$1\" == \"-f\" ]; then\n"
"    rm -rf build\n"
"fi\n"
"\n"
"[ ! -d build ] && mkdir build\n"
"\n"
"main_should_recompile=\"False\"\n"
"total={total}\n"
"current=1\n"
"\n"
"start=$(date '+%s')\n"
"\n"
"printHeader() {\n"
"    perc=$((100 * $current / $total))\n"
"    leading=${#perc}\n"
"    printf -- \"[\\e[38;05;2;49;24;27m\"\n"
"    [ $leading == \"1\" ] && printf -- \"  \"\n"
"    [ $leading == \"2\" ] && printf -- \" \"\n"
"    printf -- \"$perc\\e[0m] Building \\e[38;05;3;49;04;27m$1\\e[0m\\n\"\n"
"    current=$(($current + 1))\n"
"}\n"
"\n"
"checkRecomp() {\n"
"    [ ! -d $3 ] && mkdir -p $3\n"
"    [ ! -f $2 ] && touch $2\n"
"    file_hash=$(md5sum $1)\n"
"    last_hash=$(cat $2)\n"
"    if [ \"$file_hash\" != \"$last_hash\" ]\n"
"    then\n"
"        main_should_recompile=\"True\"\n"
"        recompile=\"True\"\n"
"        [ -f $4 ] && rm $4\n"
"    else\n"
"        printf -- \"..... \\e[38;05;3;49;04;27m$1\\e[0m \\e[38;05;10;49;24;27mis up to date\\e[0m\\n\"\n"
"    fi\n"
"}\n"
"\n"
"checkSuccess() {\n"
"    if [ ! -f $1 ]\n"
"    then\n"
"        echo > $2\n"
"        printf -- \"\\e[38;05;1;49;24;27m-- Compilation failed!\\e[0m\\n\"\n"
"        exit 1\n"
"    fi\n"
"}\n"
"\n"
"printf -- \"\\e[38;05;2;49;24;27m--\\e[0m \\e[38;05;2;49;04;27mStarting build process\\e[0m\\n\"\n"
"printf -- \"\\e[38;05;2;49;24;27m-- Compiler: \\e[0m \\e[38;05;3;49;04;27m{compiler}\\e[0m\\n\\n\"\n"
"\n";

} // namespace bsha

#endif
